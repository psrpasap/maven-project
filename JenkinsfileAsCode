
pipeline {
    agent any
    tools {
        maven 'localMaven'
    }
	def fetch(scm, cookbookDirectory, currentBranch){
	    echo "Inside fetch method"
		checkout([$class: 'GitSCM',branches: scm.branches,    doGenerateSubmoduleConfigurations: scm.doGenerateSubmoduleConfigurations,
		extensions: scm.extensions + [ [$class: 'RelativeTargetDirectory',relativeTargetDir: cookbookDirectory],[$class: 'CleanBeforeCheckout'],
        [$class: 'LocalBranch', localBranch: currentBranch]],    userRemoteConfigs: scm.userRemoteConfigs  ])
    }
    stages{
        stage('Build'){
            steps {
			    
			    echo 'Inside Build stage *****'
				echo env.AUTOMATE_ENTERPRISE
				echo env.AUTOMATE_URL
				echo 'BranchName'
				checkout scm
				echo "GitLocalBranch is:  "+ env.GIT_LOCAL_BRANCH
				echo "GitBRanch is : "+ env.GIT_BRANCH
				echo 'JobName'
				echo env.JOB_NAME
				echo "Calling fetch method"
				currentBranch = env.GIT_BRANCH
				cookbookDirectory=""
				fetch(scm, cookbookDirectory, currentBranch)
                bat 'mvn clean package'
            }
            post {
                success {
                    echo 'Now Archiving...'
                    archiveArtifacts artifacts: '**/target/*.war'
                }
            }
        }
        stage ('Deploy to Staging'){
            steps {
                build job: 'deploy-to-staging'
            }
        }

        stage ('Deploy to Production'){
            steps{
                timeout(time:5, unit:'DAYS'){
                    input message:'Approve PRODUCTION Deploy?'
                }

                build job: 'deploy-to-prod'
            }
            post {
                success {
                    echo 'Code deployed to Production.'
                }

                failure {
                    echo ' Deployment failed....'
                }
            }
        }


    }
}